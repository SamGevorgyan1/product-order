plugins {
    id 'java'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "1.1.0"
    id 'io.freefair.lombok' version "6.4.3.1"
}
apply plugin: 'java'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

def build_tag = "dev"
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":user-service-interface")
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-devtools'



    implementation "org.postgresql:postgresql:$postgresqlVersion"
    implementation "org.flywaydb:flyway-core"



    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

springBoot {
    buildInfo()
}

compileJava {
    options.warnings = true
    options.deprecation = true
    options.compilerArgs += ["-Xlint:unchecked"]
}

bootJar {
    mainClass = 'com.productorder.platform.user.ApiProperties'
    archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}"
}

task bootRunUserServiceDev(type: org.springframework.boot.gradle.tasks.run.BootRun, dependsOn: 'assemble') {
    group 'Application'
    mainClass = 'com.productorder.platform.user.ApiProperties'
    doFirst {
        classpath = sourceSets.main.compileClasspath
        systemProperty 'spring.profile.active', 'local'
    }
}

task buildDockerImage(type: Exec) {
    mustRunAfter assemble
    workingDir project.projectDir
    commandLine "docker", "build", "--build-arg", "FOUNDATION_BUILD_TAG=$build_tag", "-f", "Dockerfile", "-t", "platform/user-service:$build_tag", "--pull=false", "."
}


